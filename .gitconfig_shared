[include]
  path = ~/.gitconfig.user

[core]
    ignorecase = false
    quotepath = false
    safecrlf = true
[alias]
    # リモート含めブランチをcheckoutする
    co = "!f() { args=$@; if [ -z \"$args\" ]; then branch=$(git branch --all | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color=always' | cut -c 3-); git checkout $(echo $branch | sed 's#remotes/[^/]*/##'); else git checkout $args; fi }; f"
    # ファイルの差分をプレビュー付きで確認する
    d = "!f() { args=$@; [ -z \"$args\" ] && args=HEAD; ([ \"$args\" = \"HEAD\" ] && git status --short || git diff --name-status $args | sed 's/\t/  /') | fzf --preview \"echo {} | cut -c 4- | xargs git diff --color=always $args --\" --multi --height 90% | cut -c 4-; }; f"
    # 差分を選択してaddする
    da = !git d | xargs git add --
    # 現在のブランチをpullする
    pl = "!f() { args=$@; [ -z \"$args\" ] && git pull origin $(git symbolic-ref --short HEAD) || git pull $args; }; f"
    # 現在のブランチをpushする
    ps = "!f() { args=$@; [ -z \"$args\" ] && git push origin HEAD || git push $args; }; f"
    # show log graph
    lg = "!f() { args=$@; [ -z \"$args\" ] && git log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%an%C(reset)%C(bold yellow)%d%C(reset) %C(dim white)- %s%C(reset)' --all; }; f"
    # show branches and checkout selected
    b = "!f() { args=$@; git branch | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color=always' | cut -c 3- | xargs git checkout; }; f"
    # show branches and checkout selected with remote
    br = "!f() { args=$@; git branch --all | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color=always' | cut -c 3- | xargs git checkout; }; f"


[diff]
  tool = difftastic
  external = difft
[difftool]
  prompt = false
[difftool "difftastic"]
  cmd = difft "$LOCAL" "$REMOTE"
[pager]
  difftool = true

[credential]
  helper = cache
